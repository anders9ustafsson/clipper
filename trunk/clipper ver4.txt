===============================================================================
Clipper version 4.
===============================================================================

Clipper4 is a major rewrite of earlier versions.

The bigest change is that floating point values are no longer used, except for 
the storing of edge slope values. The bigest benefit of this is that the issue 
of numerical robustness has been addressed. (Potential lack of robustness with 
edge slope comparisons may affect edge sort order within 'scanbeams', but this 
should not affect the robustness of the library.) 

Due to major code improvements and to a lesser extent due to the change to 
integer coordinates, Clipper4 is approximately 30% faster than Clipper3.

One minor drawback with the change to integer coordinates, is that the user 
will have to convert floating point coordinates into integer values - usually 
with some scaling to manage precision. When values are scaled up to improve 
coordinate precision, the programmer must keep in mind that integers are 
confined to 64bits, so there is a limit to how much scaling is possible before 
overflow errors will be encountered.

The AddPolyPolygon() method has been renamed AddPolygons(). (The old name was
a relic from a naming style in the Delphi Graphics32 library.) Also, in
throwing off another Delphi naming convention, all classes, structures and 
enumerations in the C++ and C# translations have lost their T prescripts - eg 
TClipType is now ClipType, though the T's are retained in the Delphi code.