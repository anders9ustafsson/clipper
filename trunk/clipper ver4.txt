===============================================================================
Clipper version 4.
===============================================================================

Clipper4 is a major rewrite of earlier versions.

The bigest change is that floating point values are no longer used, except for 
the storing of edge slope values. The bigest benefit of this is that the issue 
of numerical robustness has been addressed. (Potential lack of robustness with 
edge slope comparisons may affect edge sort order within 'scanbeams', but this 
should not affect the robustness of the library.) 

Due to major code improvements and to a lesser extent due to the change to 
integer coordinates, Clipper4 is approximately 40% faster than Clipper3.

One minor drawback with the change to integer coordinates, is that the user 
will have to convert floating point coordinates into integer values - usually 
with some scaling to manage precision. When values are scaled up to improve 
coordinate precision, the programmer must keep in mind that on most platforms 
integers are still confined to 32bits, so there is a limit to how much scaling 
is possible before overflow errors will be encountered.

Many of Clipper's methods have been renamed though they still retain a 
similarity with their old names. (The old names were cumbersome but had their 
heritage in the Delphi programming language and the popular Delphi graphics 
library Graphics32.) As an example, the AddPolyPolygon() method has been 
renamed AddPolygons(). Likewise, all classes, structures and enumerations have 
lost their T's (except in the Delphi code) - so TClipType is now ClipType etc.